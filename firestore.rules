rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user is accessing their own data
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isOwner(userId);
      allow create: if isAuthenticated();
      allow update, delete: if isOwner(userId);

      // Todos subcollection
      match /todos/{todoId} {
        allow read, write: if isOwner(userId);
      }

      // Tasks subcollection
      match /tasks/{taskId} {
        allow read, write: if isOwner(userId);
      }

      // Pomodoro sessions subcollection
      match /pomodoroSessions/{sessionId} {
        allow read, write: if isOwner(userId);
      }

      // Focus sessions subcollection
      match /sessions/{sessionId} {
        allow read, write: if isOwner(userId);
      }

      // AI Focus Tips subcollection
      match /focusTips/{tipId} {
        allow read, write: if isOwner(userId);
      }

      // Journal entries subcollection
      match /journal_entries/{entryId} {
        allow read, write: if isOwner(userId);
      }

      // Journal entries with alt name for backward compatibility
      match /journalEntries/{entryId} {
        allow read, write: if isOwner(userId);
      }

      // AI logs subcollection
      match /aiLogs/{logId} {
        allow read, write: if isOwner(userId);
      }

      // AI insights subcollection
      match /insights/{insightId} {
        allow read, write: if isOwner(userId);
      }

      // User settings subcollection
      match /settings/{settingId} {
        allow read, write: if isOwner(userId);
      }

      // Calendar events subcollection
      match /events/{eventId} {
        allow read, write: if isOwner(userId);
      }
    }

    // Focus Sessions (between two users)
    match /sessions/{sessionId} {
      allow create: if isAuthenticated();
      allow read, update, delete: if isAuthenticated() &&
        (resource.data.userA == request.auth.uid || 
         resource.data.userB == request.auth.uid);
    }

    // Public content (e.g., templates)
    match /templates/{templateId} {
      allow read: if true;
      allow write: if isAuthenticated() && request.auth.token.admin == true;
    }

    // Global stats (anonymous usage data)
    match /stats/{statId} {
      allow read: if true;
      allow write: if isAuthenticated() && request.auth.token.admin == true;
    }

    // User subscriptions (top-level collection)
    match /subscriptions/{userId} {
      allow read, write: if isAuthenticated() && request.auth.uid == userId;
      allow read, write: if isAuthenticated() && request.auth.token.admin == true;
    }

    // Default deny for everything else
    match /{document=**} {
      allow read, write: if false;
    }
  }
}